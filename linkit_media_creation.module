<?php

/**
 * @file
 * Main file for the linkit_media_creation.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\linkit_media_creation\Ajax\ReturnToLinkitCommand;
use Drupal\Component\Utility\UrlHelper;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function linkit_media_creation_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {

    case 'help.page.linkit_media_creation':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Create media entites from linkit modal form.') . '</p>';

            // Add a link to the Drupal.org project.
      $output .= '<p>';
      $output .= t('Visit the <a href=":project_link">Linkit Media Creation project page</a> on Drupal.org for more information.',[
        ':project_link' => 'https://www.drupal.org/project/linkit_media_creation'
        ]);
      $output .= '</p>';

      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function linkit_media_creation_theme() {
  return [
    'html__admin__linkit_media_creation__dialogue' => [
      'base hook' => 'html',
      'path' => drupal_get_path('module', 'linkit_media_creation') . '/templates',
    ],
  ];
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function linkit_media_creation_form_linkit_editor_dialog_form_alter(&$form, FormStateInterface $form_state) {
  /** @var \Drupal\Linkit\ProfileInterface $linkit_profile */
  $profile = $form_state->getFormObject()->getLinkitProfile();
  foreach ($profile->getMatchers() as $matcher) {
    if ($matcher->getPluginId() == 'entity:media') {
      $configuration = $matcher->getConfiguration();
      if ($configuration['settings']['media_creation_link']) {
        $form['#attributes']['class'][] = 'linkit-media-creation-url-input';
        $form['#attached']['library'][] = 'linkit_media_creation/dialogue';
        if (!empty($configuration['settings']['bundles'])) {
          $form['#attached']['drupalSettings']['linkitMediaCreation']['allowedBundles'] = implode(', ', $configuration['settings']['bundles']);
        }
      }
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function linkit_media_creation_form_media_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (\Drupal::routeMatch()->getRouteName() == 'linkit_media_creation.dialogue') {
    $form['actions']['submit']['#ajax'] = [
      'callback' => 'linkit_media_creation_ajax_callback',
    ];
  }
}

/**
 * Pass entity data to ajax command.
 */
function linkit_media_creation_ajax_callback(array &$form, FormStateInterface $form_state) {
  $entity = $form_state->getFormObject()->getEntity();
  $mid = $entity->id();
  $returnValue = "/media/{$mid}";
  $current_uri = \Drupal::requestStack()->getCurrentRequest()->getRequestUri();
  $entitySubstitution = $entityType = 'media';
  $uuid = $entity->uuid();
  $ajax_response = new AjaxResponse();
  $ajax_response->addCommand(
    new ReturnToLinkitCommand(
      $returnValue,
      $entitySubstitution,
      $entityType,
      $uuid
  ));
  return $ajax_response;
}
